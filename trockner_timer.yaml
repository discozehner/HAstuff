blueprint:
  name: Trockner-Stoppuhr mit Timer
  description: >
    Startet einen Timer, wenn der Trockner eingeschaltet wird, und stoppt ihn, wenn er ausgeschaltet wird.
    Ideal zur Anzeige der Laufzeit in einer Button-Card.
  domain: automation
  input:
    trigger_sensor:
      name: Trockner Status Sensor
      description: Der Sensor, der den Zustand des Trockners angibt.
      selector:
        entity:
          domain: sensor
    state_on:
      name: Zustand zum Starten
      description: Der Zustand, bei dem der Timer gestartet wird (z.B. "eingeschaltet").
      default: "eingeschaltet"
      selector:
        text:
    state_off:
      name: Zustand zum Stoppen
      description: Der Zustand, bei dem der Timer gestoppt wird (z.B. "ausgeschaltet").
      default: "ausgeschaltet"
      selector:
        text:
    timer_entity:
      name: Timer-EntitÃ¤t
      description: Der Timer, der gestartet und gestoppt werden soll.
      selector:
        entity:
          domain: timer

mode: restart
trigger:
  - platform: state
    entity_id: !input trigger_sensor

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.to_state.state == input.state_on }}
        sequence:
          - service: timer.start
            target:
              entity_id: !input timer_entity
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.to_state.state == input.state_off }}
        sequence:
          - service: timer.cancel
            target:
              entity_id: !input timer_entity
